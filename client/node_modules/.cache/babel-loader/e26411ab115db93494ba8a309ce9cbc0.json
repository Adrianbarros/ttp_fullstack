{"ast":null,"code":"import uuid from 'react-uuid';\nimport { GET_STOCKS, ADD_STOCKS, DELETE_STOCK, LOADING } from '../actions/types';\nconst initialState = {\n  stocks: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_STOCKS:\n      return { ...state,\n        stocks: action.payload,\n        loading: false\n      };\n\n    case DELETE_STOCK:\n      return { ...state,\n        stocks: state.stocks.filter(stock => stock._id !== action.payload)\n      };\n\n    case ADD_STOCKS:\n      return { ...state,\n        stocks: [action.payload, ...state.stocks]\n      };\n\n    case LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adrianbarros/Documents/ttp_fullstack/ttp_fullstack/client/src/reducers/itemreducer.js"],"names":["uuid","GET_STOCKS","ADD_STOCKS","DELETE_STOCK","LOADING","initialState","stocks","loading","state","action","type","payload","filter","stock","_id"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,YAAjC,EAA+CC,OAA/C,QAA8D,kBAA9D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAAUC,KAAK,GAAGH,YAAlB,EAAgCI,MAAhC,EAAwC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,UAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFZ;AAGHJ,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAKJ,YAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcL,MAAM,CAACE,OAAlD;AAFL,OAAP;;AAIJ,SAAKT,UAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,MAAM,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,MAA1B;AAFL,OAAP;;AAIJ,SAAKF,OAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHD,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ;AACI,aAAOC,KAAP;AAxBR;AA0BH","sourcesContent":["import uuid from 'react-uuid';\nimport { GET_STOCKS, ADD_STOCKS, DELETE_STOCK, LOADING } from '../actions/types';\n\nconst initialState = {\n    stocks: [],\n    loading: false\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_STOCKS:\n            return {\n                ...state,\n                stocks: action.payload,\n                loading: false\n            };\n        case DELETE_STOCK:\n            return {\n                ...state,\n                stocks: state.stocks.filter(stock => stock._id !== action.payload)\n            };\n        case ADD_STOCKS:\n            return {\n                ...state,\n                stocks: [action.payload, ...state.stocks]\n            };\n        case LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}